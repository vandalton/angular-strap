{"version":3,"sources":["modules/dimensions.js"],"names":["angular","element","factory","offsetParent","docElement","ownerDocument","height","outer","value","offsetHeight","nodeName","fn","css","documentElement","window","getComputedStyle","name","prop","extra","currentStyle","boxRect","getBoundingClientRect","style","offset","left","width","curPosition","curLeft","top","curCSSTop","curTop","setOffset","calculatePosition","position","curElem","props","curCSSLeft","curOffset","parseFloat","indexOf","isFunction","options","call","i","using","offsetParentRect","offsetParentEl","offsetParentElement","offsetWidth"],"mappings":"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","file":"dimensions.min.js","sourcesContent":["'use strict';\r\n\r\nangular.module('mgcrea.ngStrap.helpers.dimensions', [])\r\n\r\n  .factory('dimensions', function () {\r\n\r\n    var fn = {};\r\n\r\n    /**\r\n     * Test the element nodeName\r\n     * @param element\r\n     * @param name\r\n     */\r\n    var nodeName = fn.nodeName = function (element, name) {\r\n      return element.nodeName && element.nodeName.toLowerCase() === name.toLowerCase();\r\n    };\r\n\r\n    /**\r\n     * Returns the element computed style\r\n     * @param element\r\n     * @param prop\r\n     * @param extra\r\n     */\r\n    fn.css = function (element, prop, extra) {\r\n      var value;\r\n      if (element.currentStyle) { // IE\r\n        value = element.currentStyle[prop];\r\n      } else if (window.getComputedStyle) {\r\n        value = window.getComputedStyle(element)[prop];\r\n      } else {\r\n        value = element.style[prop];\r\n      }\r\n      return extra === true ? parseFloat(value) || 0 : value;\r\n    };\r\n\r\n    /**\r\n     * Provides read-only equivalent of jQuery's offset function:\r\n     * @required-by bootstrap-tooltip, bootstrap-affix\r\n     * @url http://api.jquery.com/offset/\r\n     * @param element\r\n     */\r\n    fn.offset = function (element) {\r\n      var boxRect = element.getBoundingClientRect();\r\n      var docElement = element.ownerDocument;\r\n      return {\r\n        width: boxRect.width || element.offsetWidth,\r\n        height: boxRect.height || element.offsetHeight,\r\n        top: boxRect.top + (window.pageYOffset || docElement.documentElement.scrollTop) - (docElement.documentElement.clientTop || 0),\r\n        left: boxRect.left + (window.pageXOffset || docElement.documentElement.scrollLeft) - (docElement.documentElement.clientLeft || 0)\r\n      };\r\n    };\r\n\r\n    /**\r\n     * Provides set equivalent of jQuery's offset function:\r\n     * @required-by bootstrap-tooltip\r\n     * @url http://api.jquery.com/offset/\r\n     * @param element\r\n     * @param options\r\n     * @param i\r\n     */\r\n    fn.setOffset = function (element, options, i) {\r\n      var curPosition;\r\n      var curLeft;\r\n      var curCSSTop;\r\n      var curTop;\r\n      var curOffset;\r\n      var curCSSLeft;\r\n      var calculatePosition;\r\n      var position = fn.css(element, 'position');\r\n      var curElem = angular.element(element);\r\n      var props = {};\r\n\r\n      // Set position first, in-case top/left are set even on static elem\r\n      if (position === 'static') {\r\n        element.style.position = 'relative';\r\n      }\r\n\r\n      curOffset = fn.offset(element);\r\n      curCSSTop = fn.css(element, 'top');\r\n      curCSSLeft = fn.css(element, 'left');\r\n      calculatePosition = (position === 'absolute' || position === 'fixed') &&\r\n                          (curCSSTop + curCSSLeft).indexOf('auto') > -1;\r\n\r\n      // Need to be able to calculate position if either\r\n      // top or left is auto and position is either absolute or fixed\r\n      if (calculatePosition) {\r\n        curPosition = fn.position(element);\r\n        curTop = curPosition.top;\r\n        curLeft = curPosition.left;\r\n      } else {\r\n        curTop = parseFloat(curCSSTop) || 0;\r\n        curLeft = parseFloat(curCSSLeft) || 0;\r\n      }\r\n\r\n      if (angular.isFunction(options)) {\r\n        options = options.call(element, i, curOffset);\r\n      }\r\n\r\n      if (options.top !== null) {\r\n        props.top = (options.top - curOffset.top) + curTop;\r\n      }\r\n      if (options.left !== null) {\r\n        props.left = (options.left - curOffset.left) + curLeft;\r\n      }\r\n\r\n      if ('using' in options) {\r\n        options.using.call(curElem, props);\r\n      } else {\r\n        curElem.css({\r\n          top: props.top + 'px',\r\n          left: props.left + 'px'\r\n        });\r\n      }\r\n    };\r\n\r\n    /**\r\n     * Provides read-only equivalent of jQuery's position function\r\n     * @required-by bootstrap-tooltip, bootstrap-affix\r\n     * @url http://api.jquery.com/offset/\r\n     * @param element\r\n     */\r\n    fn.position = function (element) {\r\n\r\n      var offsetParentRect = {top: 0, left: 0};\r\n      var offsetParentEl;\r\n      var offset;\r\n\r\n      // Fixed elements are offset from window (parentOffset = {top:0, left: 0}, because it is it's only offset parent\r\n      if (fn.css(element, 'position') === 'fixed') {\r\n\r\n        // We assume that getBoundingClientRect is available when computed position is fixed\r\n        offset = element.getBoundingClientRect();\r\n\r\n      } else {\r\n\r\n        // Get *real* offsetParentEl\r\n        offsetParentEl = offsetParentElement(element);\r\n\r\n        // Get correct offsets\r\n        offset = fn.offset(element);\r\n        if (!nodeName(offsetParentEl, 'html')) {\r\n          offsetParentRect = fn.offset(offsetParentEl);\r\n        }\r\n\r\n        // Add offsetParent borders\r\n        offsetParentRect.top += fn.css(offsetParentEl, 'borderTopWidth', true);\r\n        offsetParentRect.left += fn.css(offsetParentEl, 'borderLeftWidth', true);\r\n      }\r\n\r\n      // Subtract parent offsets and element margins\r\n      return {\r\n        width: element.offsetWidth,\r\n        height: element.offsetHeight,\r\n        top: offset.top - offsetParentRect.top - fn.css(element, 'marginTop', true),\r\n        left: offset.left - offsetParentRect.left - fn.css(element, 'marginLeft', true)\r\n      };\r\n\r\n    };\r\n\r\n    /**\r\n     * Returns the closest, non-statically positioned offsetParent of a given element\r\n     * @required-by fn.position\r\n     * @param element\r\n     */\r\n    function offsetParentElement (element) {\r\n      var docElement = element.ownerDocument;\r\n      var offsetParent = element.offsetParent || docElement;\r\n      if (nodeName(offsetParent, '#document')) return docElement.documentElement;\r\n      while (offsetParent && !nodeName(offsetParent, 'html') && fn.css(offsetParent, 'position') === 'static') {\r\n        offsetParent = offsetParent.offsetParent;\r\n      }\r\n      return offsetParent || docElement.documentElement;\r\n    }\r\n\r\n    /**\r\n     * Provides equivalent of jQuery's height function\r\n     * @required-by bootstrap-affix\r\n     * @url http://api.jquery.com/height/\r\n     * @param element\r\n     * @param outer\r\n     */\r\n    fn.height = function (element, outer) {\r\n      var value = element.offsetHeight;\r\n      if (outer) {\r\n        value += fn.css(element, 'marginTop', true) + fn.css(element, 'marginBottom', true);\r\n      } else {\r\n        value -= fn.css(element, 'paddingTop', true) + fn.css(element, 'paddingBottom', true) + fn.css(element, 'borderTopWidth', true) + fn.css(element, 'borderBottomWidth', true);\r\n      }\r\n      return value;\r\n    };\r\n\r\n    /**\r\n     * Provides equivalent of jQuery's width function\r\n     * @required-by bootstrap-affix\r\n     * @url http://api.jquery.com/width/\r\n     * @param element\r\n     * @param outer\r\n     */\r\n    fn.width = function (element, outer) {\r\n      var value = element.offsetWidth;\r\n      if (outer) {\r\n        value += fn.css(element, 'marginLeft', true) + fn.css(element, 'marginRight', true);\r\n      } else {\r\n        value -= fn.css(element, 'paddingLeft', true) + fn.css(element, 'paddingRight', true) + fn.css(element, 'borderLeftWidth', true) + fn.css(element, 'borderRightWidth', true);\r\n      }\r\n      return value;\r\n    };\r\n\r\n    return fn;\r\n\r\n  });\r\n"]}