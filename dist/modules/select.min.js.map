{"version":3,"sources":["modules/select.js"],"names":["angular","trigger","provider","container","this","defaults","keyboard","html","delay","multiple","allNoneButtons","sort","caretHtml","placeholder","allText","noneText","maxLength","maxLengthHtml","iconCheckmark","toggle","$get","isNative","isTouch","SelectFactory","$select","options","scope","$scope","$activeIndex","config","$tooltip","element","$isMultiple","$showAllNoneButtons","$iconCheckmark","$allText","$activate","activate","index","$$postDigest","select","evt","$isActive","$isVisible","i","$selectNone","$matches","length","matches","$updateActiveIndex","splice","a","indexOf","push","b","$apply","controller","$setViewValue","value","map","$emit","prefixEvent","onSelect","hide","isArray","$modelValue","$getIndex","minLength","$viewValue","equals","$onMouseDown","preventDefault","stopPropagation","anchor","anchorCandidate","targetEl","target","nodeName","parent","triggerHandler","$onKeyDown","test","keyCode","$digest","isUndefined","$selectScrollFix","$isIE","stopImmediatePropagation","focus","ua","_show","show","activeElement","tagName","e","$element","addClass","$timeout","_hide","on","off","directive","$window","document","link","require","restrict","forEach","attr","falseValueRegExp","isDefined","key","$eval","bsKey","dataMultiple","slice","inputEl","css","after","addEventListener","watchedOptions","parsedOptions","valuesFn","update","values","$viewChangeListeners","replace","trim","$render","then","selected","join","label","$isEmpty","$on","destroy"],"mappings":"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","file":"select.min.js","sourcesContent":["'use strict';\r\n\r\nangular.module('mgcrea.ngStrap.select', ['mgcrea.ngStrap.tooltip', 'mgcrea.ngStrap.helpers.parseOptions'])\r\n\r\n  .provider('$select', function () {\r\n\r\n    var defaults = this.defaults = {\r\n      animation: 'am-fade',\r\n      prefixClass: 'select',\r\n      prefixEvent: '$select',\r\n      placement: 'bottom-left',\r\n      templateUrl: 'select/select.tpl.html',\r\n      trigger: 'focus',\r\n      container: false,\r\n      keyboard: true,\r\n      html: false,\r\n      delay: 0,\r\n      multiple: false,\r\n      allNoneButtons: false,\r\n      sort: true,\r\n      caretHtml: '&nbsp;<span class=\"caret\"></span>',\r\n      placeholder: 'Choose among the following...',\r\n      allText: 'All',\r\n      noneText: 'None',\r\n      maxLength: 3,\r\n      maxLengthHtml: 'selected',\r\n      iconCheckmark: 'glyphicon glyphicon-ok',\r\n      toggle: false\r\n    };\r\n\r\n    this.$get = function ($window, $document, $rootScope, $tooltip, $timeout) {\r\n\r\n      // var bodyEl = angular.element($window.document.body);\r\n      var isNative = /(ip[ao]d|iphone|android)/ig.test($window.navigator.userAgent);\r\n      var isTouch = ('createTouch' in $window.document) && isNative;\r\n\r\n      function SelectFactory (element, controller, config) {\r\n\r\n        var $select = {};\r\n\r\n        // Common vars\r\n        var options = angular.extend({}, defaults, config);\r\n\r\n        $select = $tooltip(element, options);\r\n        var scope = $select.$scope;\r\n\r\n        scope.$matches = [];\r\n        if (options.multiple) {\r\n          scope.$activeIndex = [];\r\n        } else {\r\n          scope.$activeIndex = -1;\r\n        }\r\n        scope.$isMultiple = options.multiple;\r\n        scope.$showAllNoneButtons = options.allNoneButtons && options.multiple;\r\n        scope.$iconCheckmark = options.iconCheckmark;\r\n        scope.$allText = options.allText;\r\n        scope.$noneText = options.noneText;\r\n\r\n        scope.$activate = function (index) {\r\n          scope.$$postDigest(function () {\r\n            $select.activate(index);\r\n          });\r\n        };\r\n\r\n        scope.$select = function (index, evt) {\r\n          scope.$$postDigest(function () {\r\n            $select.select(index);\r\n          });\r\n        };\r\n\r\n        scope.$isVisible = function () {\r\n          return $select.$isVisible();\r\n        };\r\n\r\n        scope.$isActive = function (index) {\r\n          return $select.$isActive(index);\r\n        };\r\n\r\n        scope.$selectAll = function () {\r\n          for (var i = 0; i < scope.$matches.length; i++) {\r\n            if (!scope.$isActive(i)) {\r\n              scope.$select(i);\r\n            }\r\n          }\r\n        };\r\n\r\n        scope.$selectNone = function () {\r\n          for (var i = 0; i < scope.$matches.length; i++) {\r\n            if (scope.$isActive(i)) {\r\n              scope.$select(i);\r\n            }\r\n          }\r\n        };\r\n\r\n        // Public methods\r\n\r\n        $select.update = function (matches) {\r\n          scope.$matches = matches;\r\n          $select.$updateActiveIndex();\r\n        };\r\n\r\n        $select.activate = function (index) {\r\n          if (options.multiple) {\r\n            if ($select.$isActive(index)) {\r\n              scope.$activeIndex.splice(scope.$activeIndex.indexOf(index), 1);\r\n            } else {\r\n              scope.$activeIndex.push(index);\r\n            }\r\n            if (options.sort) scope.$activeIndex.sort(function (a, b) { return a - b; }); // use numeric sort instead of default sort\r\n          } else {\r\n            scope.$activeIndex = index;\r\n          }\r\n          return scope.$activeIndex;\r\n        };\r\n\r\n        $select.select = function (index) {\r\n          if (angular.isUndefined(index) || index < 0 || index >= scope.$matches.length) { return; }\r\n          var value = scope.$matches[index].value;\r\n          scope.$apply(function () {\r\n            $select.activate(index);\r\n            if (options.multiple) {\r\n              controller.$setViewValue(scope.$activeIndex.map(function (index) {\r\n                if (angular.isUndefined(scope.$matches[index])) {\r\n                  return null;\r\n                }\r\n                return scope.$matches[index].value;\r\n              }));\r\n            } else {\r\n              if (options.toggle) {\r\n                controller.$setViewValue((value === controller.$modelValue) ? undefined : value);\r\n              } else {\r\n                controller.$setViewValue(value);\r\n              }\r\n              // Hide if single select\r\n              $select.hide();\r\n            }\r\n          });\r\n          // Emit event\r\n          scope.$emit(options.prefixEvent + '.select', value, index, $select);\r\n          if (angular.isDefined(options.onSelect) && angular.isFunction(options.onSelect)) {\r\n            options.onSelect(value, index, $select);\r\n          }\r\n        };\r\n\r\n        // Protected methods\r\n\r\n        $select.$updateActiveIndex = function () {\r\n          if (options.multiple) {\r\n            if (angular.isArray(controller.$modelValue)) {\r\n              scope.$activeIndex = controller.$modelValue.map(function (value) {\r\n                return $select.$getIndex(value);\r\n              });\r\n            } else {\r\n              scope.$activeIndex = [];\r\n            }\r\n          } else {\r\n            if (angular.isDefined(controller.$modelValue) && scope.$matches.length) {\r\n              scope.$activeIndex = $select.$getIndex(controller.$modelValue);\r\n            } else {\r\n              scope.$activeIndex = -1;\r\n            }\r\n          }\r\n        };\r\n\r\n        $select.$isVisible = function () {\r\n          if (!options.minLength || !controller) {\r\n            return scope.$matches.length;\r\n          }\r\n          // minLength support\r\n          return scope.$matches.length && controller.$viewValue.length >= options.minLength;\r\n        };\r\n\r\n        $select.$isActive = function (index) {\r\n          if (options.multiple) {\r\n            return scope.$activeIndex.indexOf(index) !== -1;\r\n          }\r\n          return scope.$activeIndex === index;\r\n        };\r\n\r\n        $select.$getIndex = function (value) {\r\n          var index;\r\n          for (index = scope.$matches.length; index--;) {\r\n            if (angular.equals(scope.$matches[index].value, value)) break;\r\n          }\r\n          return index;\r\n        };\r\n\r\n        $select.$onMouseDown = function (evt) {\r\n          // Prevent blur on mousedown on .dropdown-menu\r\n          evt.preventDefault();\r\n          evt.stopPropagation();\r\n          // Emulate click for mobile devices\r\n          if (isTouch) {\r\n            var targetEl = angular.element(evt.target);\r\n            var anchor;\r\n\r\n            if (evt.target.nodeName !== 'A') {\r\n              var anchorCandidate = targetEl.parent();\r\n              while (!anchor && anchorCandidate.length > 0) {\r\n                if (anchorCandidate[0].nodeName === 'A') {\r\n                  anchor = anchorCandidate;\r\n                }\r\n                anchorCandidate = anchorCandidate.parent();\r\n              }\r\n            }\r\n\r\n            if (anchor) {\r\n              angular.element(anchor).triggerHandler('click');\r\n            } else {\r\n              targetEl.triggerHandler('click');\r\n            }\r\n          }\r\n        };\r\n\r\n        $select.$onKeyDown = function (evt) {\r\n          if (!/(9|13|38|40)/.test(evt.keyCode)) return;\r\n          // Let tab propagate\r\n          if (evt.keyCode !== 9) {\r\n            evt.preventDefault();\r\n            evt.stopPropagation();\r\n          }\r\n\r\n          // release focus on tab\r\n          if (options.multiple && evt.keyCode === 9) {\r\n            return $select.hide();\r\n          }\r\n\r\n          // Select with enter\r\n          if (!options.multiple && (evt.keyCode === 13 || evt.keyCode === 9)) {\r\n            return $select.select(scope.$activeIndex);\r\n          }\r\n\r\n          if (!options.multiple) {\r\n            // Navigate with keyboard\r\n            if (evt.keyCode === 38 && scope.$activeIndex > 0) scope.$activeIndex--;\r\n            else if (evt.keyCode === 38 && scope.$activeIndex < 0) scope.$activeIndex = scope.$matches.length - 1;\r\n            else if (evt.keyCode === 40 && scope.$activeIndex < scope.$matches.length - 1) scope.$activeIndex++;\r\n            else if (angular.isUndefined(scope.$activeIndex)) scope.$activeIndex = 0;\r\n            scope.$digest();\r\n          }\r\n        };\r\n\r\n        $select.$isIE = function () {\r\n          var ua = $window.navigator.userAgent;\r\n          return ua.indexOf('MSIE ') > 0 || ua.indexOf('Trident/') > 0 || ua.indexOf('Edge/') > 0;\r\n        };\r\n\r\n        $select.$selectScrollFix = function (e) {\r\n          if ($document[0].activeElement.tagName === 'UL') {\r\n            e.preventDefault();\r\n            e.stopImmediatePropagation();\r\n            e.target.focus();\r\n          }\r\n        };\r\n\r\n        // Overrides\r\n\r\n        var _show = $select.show;\r\n        $select.show = function () {\r\n          _show();\r\n          if (options.multiple) {\r\n            $select.$element.addClass('select-multiple');\r\n          }\r\n          // use timeout to hookup the events to prevent\r\n          // event bubbling from being processed imediately.\r\n          $timeout(function () {\r\n            $select.$element.on(isTouch ? 'touchstart' : 'mousedown', $select.$onMouseDown);\r\n            if (options.keyboard) {\r\n              element.on('keydown', $select.$onKeyDown);\r\n            }\r\n          }, 0, false);\r\n        };\r\n\r\n        var _hide = $select.hide;\r\n        $select.hide = function () {\r\n          if (!options.multiple && angular.isUndefined(controller.$modelValue)) {\r\n            scope.$activeIndex = -1;\r\n          }\r\n          $select.$element.off(isTouch ? 'touchstart' : 'mousedown', $select.$onMouseDown);\r\n          if (options.keyboard) {\r\n            element.off('keydown', $select.$onKeyDown);\r\n          }\r\n          _hide(true);\r\n        };\r\n\r\n        return $select;\r\n\r\n      }\r\n\r\n      SelectFactory.defaults = defaults;\r\n      return SelectFactory;\r\n\r\n    };\r\n\r\n  })\r\n\r\n  .directive('bsSelect', function ($window, $parse, $q, $select, $parseOptions) {\r\n\r\n    var defaults = $select.defaults;\r\n\r\n    return {\r\n      restrict: 'EAC',\r\n      require: 'ngModel',\r\n      link: function postLink (scope, element, attr, controller) {\r\n\r\n        // Directive options\r\n        var options = {scope: scope, placeholder: defaults.placeholder};\r\n        angular.forEach(['template', 'templateUrl', 'controller', 'controllerAs', 'placement', 'container', 'delay', 'trigger', 'keyboard', 'html', 'animation', 'placeholder', 'allNoneButtons', 'maxLength', 'maxLengthHtml', 'allText', 'noneText', 'iconCheckmark', 'autoClose', 'id', 'sort', 'caretHtml', 'prefixClass', 'prefixEvent', 'toggle'], function (key) {\r\n          if (angular.isDefined(attr[key])) options[key] = attr[key];\r\n        });\r\n\r\n        // use string regex match boolean attr falsy values, leave truthy values be\r\n        var falseValueRegExp = /^(false|0|)$/i;\r\n        angular.forEach(['html', 'container', 'allNoneButtons', 'sort'], function (key) {\r\n          if (angular.isDefined(attr[key]) && falseValueRegExp.test(attr[key])) {\r\n            options[key] = false;\r\n          }\r\n        });\r\n\r\n        // bind functions from the attrs to the show, hide and select events\r\n        angular.forEach(['onBeforeShow', 'onShow', 'onBeforeHide', 'onHide', 'onSelect'], function (key) {\r\n          var bsKey = 'bs' + key.charAt(0).toUpperCase() + key.slice(1);\r\n          if (angular.isDefined(attr[bsKey])) {\r\n            options[key] = scope.$eval(attr[bsKey]);\r\n          }\r\n        });\r\n\r\n        // Only parse data-multiple. Angular sets existence attributes to true (multiple/required/etc), they apply this\r\n        // to data-multiple as well for some reason, so we'll parse this ourselves and disregard multiple\r\n        var dataMultiple = element.attr('data-multiple');\r\n        if (angular.isDefined(dataMultiple)) {\r\n          if (falseValueRegExp.test(dataMultiple)) {\r\n            options.multiple = false;\r\n          } else {\r\n            options.multiple = dataMultiple;\r\n          }\r\n        }\r\n\r\n        // Add support for select markup\r\n        if (element[0].nodeName.toLowerCase() === 'select') {\r\n          var inputEl = element;\r\n          inputEl.css('display', 'none');\r\n          element = angular.element('<button type=\"button\" class=\"btn btn-default\" aria-haspopup=\"true\"></button>');\r\n          inputEl.after(element);\r\n        }\r\n\r\n        // Build proper bsOptions\r\n        var parsedOptions = $parseOptions(attr.bsOptions);\r\n\r\n        // Initialize select\r\n        var select = $select(element, controller, options);\r\n\r\n        if (select.$isIE()) {\r\n          element[0].addEventListener('blur', select.$selectScrollFix);\r\n        }\r\n\r\n        // Watch bsOptions values before filtering for changes\r\n        var watchedOptions = parsedOptions.$match[7].replace(/\\|.+/, '').trim();\r\n        scope.$watch(watchedOptions, function (newValue, oldValue) {\r\n          // console.warn('scope.$watch(%s)', watchedOptions, newValue, oldValue);\r\n          parsedOptions.valuesFn(scope, controller)\r\n          .then(function (values) {\r\n            select.update(values);\r\n            controller.$render();\r\n          });\r\n        }, true);\r\n\r\n        // Watch model for changes\r\n        controller.$viewChangeListeners.push(function () {\r\n          // console.warn('controller.$viewChangeListeners', 'controller.$viewValue', typeof controller.$viewValue, controller.$viewValue);\r\n          controller.$render();\r\n        });\r\n\r\n        // Model rendering in view\r\n        controller.$render = function () {\r\n          // console.warn('$render', element.attr('ng-model'), 'controller.$modelValue', typeof controller.$modelValue, controller.$modelValue, 'controller.$viewValue', typeof controller.$viewValue, controller.$viewValue);\r\n          var selected;\r\n          var index;\r\n          select.$updateActiveIndex();\r\n          if (options.multiple && angular.isArray(controller.$modelValue)) {\r\n            selected = controller.$modelValue.map(function (value) {\r\n              index = select.$getIndex(value);\r\n              return index !== -1 ? select.$scope.$matches[index].label : false;\r\n            }).filter(angular.isDefined);\r\n            if (selected.length > (options.maxLength || defaults.maxLength)) {\r\n              selected = selected.length + ' ' + (options.maxLengthHtml || defaults.maxLengthHtml);\r\n            } else {\r\n              selected = selected.join(', ');\r\n            }\r\n          } else {\r\n            index = select.$getIndex(controller.$modelValue);\r\n            selected = index !== -1 ? select.$scope.$matches[index].label : false;\r\n          }\r\n          element.html((selected || options.placeholder) + (options.caretHtml || defaults.caretHtml));\r\n        };\r\n\r\n        if (options.multiple) {\r\n          controller.$isEmpty = function (value) {\r\n            return !value || value.length === 0;\r\n          };\r\n        }\r\n\r\n        // Garbage collection\r\n        scope.$on('$destroy', function () {\r\n          if (select) select.destroy();\r\n          options = null;\r\n          select = null;\r\n        });\r\n\r\n      }\r\n    };\r\n\r\n  });\r\n"]}