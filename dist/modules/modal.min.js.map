{"version":3,"sources":["modules/modal.js"],"names":["angular","placement","provider","templateUrl","this","defaults","template","contentTemplate","container","element","backdrop","keyboard","html","show","size","zIndex","$get","forEach","requestAnimationFrame","bodyElement","backdropCount","dialogBaseZindex","validSizes","ModalFactory","config","enterAnimateCallback","$modal","hide","options","prefixEvent","$isShown","onShow","isFunction","$emit","modalElement","attr","isDefined","scope","onHide","removeClass","prefixClass","findFocusableElements","focusable","offsetWidth","offsetHeight","focusableElements","document","findNextFocusableElement","activeElement","filter","call","querySelectorAll","inReverse","index","undefined","toggle","prototype","reverse","indexOf","unbindBackdropEvents","off","hideOnBackdropClick","backdropElement","preventEventDefault","bindKeyboardEvents","on","$onKeyDown","evt","focus","preventDefault","modalScope","$destroy","$element","parseInt","backdropBaseZindex","compile","$scope","$new","$rootScope","id","returnFocus","key","$show","$sce","trustAsHtml","$$postDigest","left","bottom","right","promise","css","compileData","init","data","destroy","destroyModalElement","parent","after","isElement","z-index","link","clonedElement","onBeforeShow","display","defaultPrevented","addClass","customClass","animation","findElement","$animate","enter","minor","backdropAnimation","el","then","safeDigest","bindBackdropEvents","onBeforeHide","leave","leaveAnimateCallback","unbindKeyboardEvents","which","keyCode","nextFocusable","stopPropagation","shiftKey","length","directive","$root","$$phase","$digest","restrict","query","lg","sm","$window","setTimeout","body","$options","falseValueRegExp","test","bsKey","modalClass","$observe","charAt","newValue","oldValue","$eval","$watch","isObject","extend","bsModal","modal","content","trigger","$on"],"mappings":"AAOA,YAEAA,SAGMC,OAAW,wBAAA,sBAAA,sCAAAC,SAAA,SAAA,WAFf,GAGIC,GAAaC,KAAAC,UACbC,UAAU,UACVC,kBAAiB,UACjBC,YAAW,GACXC,YAAS,QACTC,YAAU,QACVC,UAAU,MACVC,YAAM,uBACNC,SAAM,GACNC,iBAAM,EACNC,WAAQ,EAFVN,QAAS,KAKTL,UAAKY,EAEHL,UAAIM,EACJL,MAAIM,EACJL,MAAIM,EAEJL,KAAIM,KACJL,OAAIM,KAJRjB,MAOIY,MAAIM,UAAAA,aAAAA,cAAAA,WAAAA,WAAAA,OAAAA,aAAAA,SAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,GAIN,QAASC,GAAaC,GAyIpB,QAASC,KAgEPC,EAAOC,MAAOC,EAAAC,YAAA,QAAAH,GACZ1B,QAAY8B,UAAUF,EAAAG,SAAA/B,QAAAgC,WAAAJ,EAAAG,SAEtBH,EAAUK,OAAML,GA9DlBM,EAAaC,KAAK,cAAe,SAiE/BD,EAAYE,GAAAA,QAtChB,QA0EUR,KAzERS,EA0EMlB,MAAAA,EAAYgB,YAAK,QAAeT,GAzElC1B,QAAQoC,UAAUR,EAAQU,SAAWtC,QAAQgC,WAAWJ,EAAQU,SAClEV,EAAQU,OAAOZ,GA4EbP,EAAYoB,UAAYX,QAAQY,IAzElCrB,EAAYoB,YAAYX,EAAQY,YAAc,SAC1CZ,EAAQlB,UA4EdS,EAASsB,KAAAA,cAAAA,UAILb,EAAIc,WA3ENvB,EA8EaV,YAAQkC,EAAcH,YAAaI,SAAAA,EAAoBnC,WA3ExE,QAASgC,KACP,GAAII,GAAoB,8HAiFxB,IAAAC,SAASC,cAAAA,CACP,GAAID,GAASE,MAAAA,UAAeC,OAAAC,KAAAhB,EAAA,GAAAiB,iBAAAN,GAAA,SAAApC,GAC1B,MAAIiC,GAAYD,YAAAA,GAAAA,EAAAA,aAAAA,GAAAA,IAAAA,SAAAA,eAEhB,OAAIW,IA7EV,QAiFUC,GAA0BP,GAhFlC,GAiFIA,SAAOJ,cAAkB,CAhF3B,GAAIA,GAAYD,GAChB,IAAkBa,SAAdZ,EAAyB,MAmFxBa,KACD7B,EAAOI,MAAU0B,UAAAC,QAAAP,KAAAR,GAhFrB,IAAIW,GAkFGX,EAAAgB,QAAAZ,SAAAE,cACLtB,OAAOb,GAAAA,EAAAA,IA+CX,QAAS8C,KACH/B,EAAQlB,WACVwB,EAAa0B,GAAAA,QAAIC,GACjBC,EAAgBF,GAAAA,QAAIC,GACpBC,EAAgBF,GAAAA,QAAIG,IAIxB,QAASC,KACHpC,EAAQjB,WACVuB,EAAa+B,IAAG,QAASvC,GACzBQ,EAAgB0B,IAAA,QAAWlC,GA7F7BoC,EAAgBF,IAAI,QAASG,IAGjC,QA+FQnC,KACFM,EAAAA,WACAA,EAAa0B,GAAAA,QAAIlC,EAAWA,UA9F9BQ,EAAa+B,GAAG,UAAWvC,EAAOwC,aAGtC,QAkGQC,KACAvC,EAAQlB,WACVgB,EAAO0C,IAAAA,QAAAA,EAAAA,UAjGTlC,EAkGO0B,IAAA,UAAAlC,EAAAwC,aA/FX,QAASL,GAAoBM,GAoG3BA,EAASJ,SAAAA,EAAAA,gBACHM,WAAAA,EAAAA,SAlGJ3C,EAAO0C,QAsGP1C,EAAIA,QAjGR,QAASqC,GAAoBI,GAuGzBA,EAAIG,iBApGR,QAsGMA,KArGA5C,EAAOI,UAA6B,OAAjBI,IAwGrByB,IACEzB,KArGAoC,IACFA,EAAWC,WAyGbD,EAAO5C,MAMTQ,IAEEG,EAAkBA,SA5GhBH,EAAeR,EAAO8C,SAAW,MA/QnC,GAAI5C,MACFP,EAAAA,EAAmBoD,SAAS7C,QAAQb,UAAQV,EAAAmB,GAC5CkD,EAAAA,EAAAA,SAAqBrD,EAAmBsD,QAAA/C,GAZxCS,EAAQX,EAAOkD,OAAShD,EAAQS,OAAST,EAAQS,MAAMwC,QAAUC,EAAWD,MAkB9EnD,GAAaE,SAAQmD,EAAMnD,YAE3BF,EAAOsD,UAAc,QAMnBpD,EAAIA,SArBNP,EAAmBoD,SAAS7C,EAAQb,OAAQ,IAyB5CsB,EAAchB,EAAA,IAtBhBK,EAwBMA,IAAOC,EAAAA,IAAAA,EAAAA,SAAAA,EAAAA,QAAAA,KAAAA,OAAAA,GAvBbD,EAAOsD,YAAc,aACrB/D,GAAU,QAAS,WAAa,SAASgE,GAyBjCC,EAAQD,KAAA5C,EAAA4C,GAAAE,EAAAC,YAAAxD,EAAAqD,OAtBhB5C,EAwBMX,MAAOb,WAvBXwB,EAAMgD,aAAa,WACjB3D,EAAOC,UAGXU,EAwBMX,MAAO6B,WAvBXlB,EAAMgD,aAAa,WACjB3D,EAAOb,UA8BTwB,EAAIH,QAAAA,WACJG,EAAIiC,aAAAA,WACAR,EAAAA,YAxBNpC,EAyB+CI,SAAAO,EAAAP,UAAA,CAxB/C,IAwBsDwD,GAAaC,EAAeC,EArB9E1B,EAAkB9D,QAAQS,QAAQ,eAAiBmB,EAAQY,YAAc,eA4P7E,OAtOEiD,GAAaC,KACXC,SAAAA,QACAjE,IAAAA,MApBF4D,KAAM,MAuBN5D,OAAOkE,MAGLJ,MAAI5D,QAtBR6D,EAwBQ/D,KAAOb,SAAAA,GAvBb8E,EAAcE,EACdnE,EAAOkE,SA4BPlE,EAAOoE,KAAAA,WAGLC,EAAAA,MAGA1D,EAAIyB,aAAiB,WACnBA,EAAAA,UA1BNpC,EAAOoE,QAAU,WAkCfpE,IACMA,IAEJoC,EAAIkC,SACJlC,EAAImC,MAhCN5D,EAkCI2D,YAhCNtE,EAAOb,KAkCI,WAjCT,IAkCIa,EAAIE,SAlCR,CACA,GAkCMoE,GACAC,CATN,IAxBIjG,QAkCOkG,UAAAtE,EAAApB,YAjCTwF,EAkCIA,EAASxF,UAjCbyF,EAkCIA,EAAQrE,UAAQnB,GAAAA,UAAAA,QAAAA,QAAAA,EAAAA,UAAAA,GAAAA,WAAAA,MAhChBmB,EAAQpB,WAqCR0B,EAAAA,EAAc6D,EAAAA,WAIlBzB,EAAAA,EAAa5C,IAAOkD,EAAOC,GAAAA,UAAAA,QAAAA,QAAAA,EAAAA,GAAAA,WAAAA,OAIvBjD,EAAQlB,KAEVwB,EAAAA,EAAawD,SACb5B,GAAgB4B,IAvCpBpB,EAuCyB6B,EAAWzB,OAAAA,OAtCpCxC,EAAeR,EAAO8C,SAAWmB,EAAYS,KAAK9B,EAAY,SAAS+B,EAAehE,MAyClFjB,EAAAA,WAvCFc,EAAawD,KA0CTrD,UAAMJ,EAA4B,GAAdJ,IAvCxBiC,EAAgB4B,KA0CZ1F,UAAQoC,EAAmCpC,GAAjBsG,IAvC9BlF,MA4CkBmF,EAAAA,MAAS3E,EAAAC,YAAA,eAAAH,GAAA8E,iBA1C7B,CA8CItE,QAAAA,UAAauE,EAAS7E,eAAQ8E,QAAAA,WAAAA,EAAAA,eA1ChC9E,EAAQ0E,aAAa5E,GAEvBQ,EA6CYzB,KA5CV8F,QAAS,UAgDTE,SAAYE,EAAAA,WACV/E,EAAIA,aA9CNM,EA+CI4B,SAAgB2C,EAAS7E,aAE3BM,EAAAA,MAAauE,EAAS7E,EAAQ+E,OA9ChC3G,QAAQS,QAAQmG,EAAY,gBAAiB1E,EAAa,KAAKuE,SAASnF,EAAWM,EAAQd,OAkDzF+F,EAASC,YA/CPlF,EAAQlB,UAoDRV,EAAgB+G,SAASnF,EAAGoF,mBAjDhC9E,EAmDOuE,SAAA7E,EAAA+E,YAjDL/E,EAAQlB,UAqDVgB,EAAOI,MAAAA,EAAiBA,EAAW,MAI/BmF,QAAK/E,QAAAA,OAAa,EACtBhB,EAAAA,MAAAA,EAAsB8E,EAAAC,EAAAxE,GApDtBoF,EAASC,MAAM5E,EAAc8D,EAAQC,GAAOiB,KAAKzF,GA2DjDC,EAAIE,SAAQlB,EAAUoB,UAAA,EAxDxBqF,EAyDIhG,EAxDJ,IAAI8F,GAAK/E,EAAa,EA2DpBhB,GAAYyF,WACVxF,EAAAA,UAIFiG,EAAAA,SAAAA,EAAAA,YAAAA,SACApD,EAAAA,UACAtC,EAAO0C,KAAAA,cAAAA,QAGTxC,EAASH,WACPY,EAAYT,SAAQC,EAAAA,YAAuBH,SAAAA,EAAAA,WA3D7C0F,IACApD,IA+DE9B,EAAAA,WApDJR,EAAOC,KAAO,WAkEVO,EAAAA,WAEIR,EAAAA,MAAOsD,EAAAA,YAAsBtD,eAAOsD,GAAgBwB,mBA/DtDxG,QAqEKoC,UAAAR,EAAAyF,eAAArH,QAAAgC,WAAAJ,EAAAyF,eACLR,EAAAA,aAAe3E,GAGjBA,EAAYxB,KAAAA,cAAU,QAEpBU,EAAAA,aAAAA,kBAAAA,GAAAA,aAAAA,EAAAA,cACAyF,QAASS,QAAMxD,OAAAA,EAtEjB+C,EAASS,MAAMpF,EAAcqF,GAyE7BJ,EAAW9E,MAAAA,GAAAA,KAAAA,GAIXmF,EAAAA,WAxEApG,IA2EFyF,EAASU,MAAAA,IAEP7F,EAAI1B,SAAQoC,EAAUR,UAAQU,EAzEhC6E,EA0EY7E,GAzEZqB,IA2EE6D,OA8CF9F,EAAO0C,OAAQ,WACblC,EAAAA,SAlFAR,EAAOC,OA0FPD,EAAQ+F,QArFZ/F,EAAO0C,MAAQ,WACblC,EAAa,GAAGkC,SAElB1C,EAyFQE,SAAQjB,SAAUwD,GACZuD,KAARvD,EAAIA,OAAgBzC,EAAGI,WAxFzBJ,EA0FQiG,OAzFRxD,EA0FIyD,oBAvFRlG,EAAOwC,WA2FOxB,SAAYD,GA1FxB,GAAIb,EA2FQuC,UACQzB,IA3FdyB,EA2FIzB,QAAUA,CA1FhB,GAAIiF,GA2FO5E,EAAAoB,EAAA0D,SA1FX,IA2FmBzD,SAAb1B,EAAa0B,CA1FbD,EAAIE,gBAAgBF,EAAIE,iBACxBF,EAAIyD,iBAAiBzD,EAAIyD,iBAC7B,IAAIlF,GAAYD,GACZ0B,GAAI0D,SACNnF,EAAUA,EAAUoF,OAAS,GAAG1D,QA8FlCxC,EAAQlB,GAAAA,WAnCTgB,EAET,QAASyF,GAAW9E,GAqHrB0F,EAAAA,SAAU1F,EAAA2F,OAAA3F,EAAA2F,MAAAC,SAAA5F,EAAW6F,UAGlBC,QAAAA,GAAUC,EAAA3H,GACV4B,MAAOrC,SAAAS,SAAAA,GAAAqC,UAAAK,iBAAAiF,IAraT,GAOIC,GAAIrI,QAAAiB,QACJqH,EAAIC,EAAArH,uBAAAqH,EAAAC,WANJrH,EAAcnB,QAAQS,QAAQ8H,EAAQzF,SAAS2F,MASjDrH,EAASG,EAEPF,EAAIK,KAGJgD,EAAqBgE,KACrBpH,GACA+G,GAAIhG,WAEJiG,GAAA,WA8RJ,OAuHQ1G,OArHTmG,UAqHkCtH,WAASA,UAAAA,OAAAA,SAAAA,SAAAA,SAAAA,EAAAA,EAAAA,EAAAA,GApH5C,OACE0H,SAAU,MACV9F,OAmHIrC,EAlHJoG,KAmHM,SAAYhE,EAAe6C,EAAOrD,EAAQqD,GAlH9C,GAAIrD,IAsHFS,MAAIT,EACFA,QAAQ8E,EApHV7F,MAAM,EAyHNb,SAAQiB,SAAS,WAAY,cAAY,aAAQ,eAAwBgE,kBAAAA,YAAAA,WAAAA,WAAAA,OAAAA,YAAAA,YAAAA,oBAAAA,KAAAA,cAAAA,cAAAA,cAAAA,aAAAA,OAAAA,UAAAA,SAAAA,GACnEjF,QAAQoC,UAAUD,EAAK8C,MAAAA,EAAS0D,GAAAA,EAAiBC,MAIvD5I,EAAQiB,aACNW,EAAIiH,YAAe5D,EAAW6D,WAvHlC,IAyHMlH,GAAeS,eAxHrBrC,SAAQiB,SAAU,WAAY,WAAY,OAAQ,aAAe,SAASgE,GACpEjF,QAAQoC,UAAUD,EAAK8C,KAAS0D,EAAiBC,KAAKzG,EAAK8C,MAAOrD,EAAQqD,IAAO,KAEvFjF,QA2HQmC,SAAW,eAAA,SAAA,eAAA,UAAA,SAAA8C,GA1HjB,GA2HI9C,GAAK4G,KAAS9D,EAAK+D,OAAUC,GAAAA,cAAUC,EAAAA,MAAAA,EACrC7G,SAAM4C,UAAYG,EAAAA,MA1HtBxD,EAAQqD,GAAO5C,EAAM8G,MAAMhH,EAAK0G,OAgIlC7I,QAAImC,SAAc,QAAA,WAAA,SAAA8C,GAChB5C,EAAM+G,IACJjH,EAAInC,SAAQqJ,EAAAA,SAASJ,EAAWC,GAC9BlJ,EAAAA,GAAQsJ,EAAOjH,YAAO4G,OAzH1B9G,EA6HGoH,SA5HLlH,EAAM+G,OAAOjH,EAAKoH,QAAS,SAASN,EAAUC,GAgI1CM,QAAQ9H,SAAOE,GAEfA,QAAQjB,OAAAA,EAAUsI,GAElBxI,EAAQgJ,QAAGrF,IA9HZ,EAsIH/B,IAAAA,GAAUX,EAAAE,EACRA,GAAI4H,WACJ5H,EAAAA,YAAU,WACV4H,EAAQ,GAAApF,UAjIZ3D,EAAQwD,GAAG9B,EAAKuH,SAAW,QAASF,EAAMjG,QAC1ClB,EAAMsH,IAAI,WAAY,WAChBH,GAAOA,EAAM1D,UACjBlE,EAAU,KACV4H,EAAQ","file":"modal.min.js","sourcesContent":["'use strict';\r\n\r\nangular.module('mgcrea.ngStrap.modal', ['mgcrea.ngStrap.core', 'mgcrea.ngStrap.helpers.dimensions'])\r\n\r\n  .provider('$modal', function () {\r\n\r\n    var defaults = this.defaults = {\r\n      animation: 'am-fade',\r\n      backdropAnimation: 'am-fade',\r\n      customClass: '',\r\n      prefixClass: 'modal',\r\n      prefixEvent: 'modal',\r\n      placement: 'top',\r\n      templateUrl: 'modal/modal.tpl.html',\r\n      template: '',\r\n      contentTemplate: false,\r\n      container: false,\r\n      element: null,\r\n      backdrop: true,\r\n      keyboard: true,\r\n      html: false,\r\n      show: true,\r\n      size: null,\r\n      zIndex: null\r\n    };\r\n\r\n    this.$get = function ($window, $rootScope, $bsCompiler, $animate, $timeout, $sce, dimensions) {\r\n\r\n      var forEach = angular.forEach;\r\n      var requestAnimationFrame = $window.requestAnimationFrame || $window.setTimeout;\r\n      var bodyElement = angular.element($window.document.body);\r\n\r\n      var backdropCount = 0;\r\n      var dialogBaseZindex = 1050;\r\n      var backdropBaseZindex = 1040;\r\n\r\n      var validSizes = {\r\n        lg: 'modal-lg',\r\n        sm: 'modal-sm'\r\n      };\r\n\r\n      function ModalFactory (config) {\r\n\r\n        var $modal = {};\r\n\r\n        // Common vars\r\n        var options = $modal.$options = angular.extend({}, defaults, config);\r\n        var promise = $modal.$promise = $bsCompiler.compile(options);\r\n        var scope = $modal.$scope = options.scope && options.scope.$new() || $rootScope.$new();\r\n\r\n        if (!options.element && !options.container) {\r\n          options.container = 'body';\r\n        }\r\n\r\n        if (options.zIndex) {\r\n          dialogBaseZindex = parseInt(options.zIndex, 10);\r\n          backdropBaseZindex = dialogBaseZindex - 10;\r\n        }\r\n\r\n        // Store $id to identify the triggering element in events\r\n        // give priority to options.id, otherwise, try to use\r\n        // element id if defined\r\n        $modal.$id = options.id || options.element && options.element.attr('id') || '';\r\n\r\n        $modal.returnFocus = function () {\r\n\r\n        };\r\n\r\n        // Support scope as string options\r\n        forEach(['title', 'content'], function (key) {\r\n          if (options[key]) scope[key] = $sce.trustAsHtml(options[key]);\r\n        });\r\n\r\n        // Provide scope helpers\r\n        scope.$hide = function () {\r\n          scope.$$postDigest(function () {\r\n            $modal.hide();\r\n          });\r\n        };\r\n        scope.$show = function () {\r\n          scope.$$postDigest(function () {\r\n            $modal.show();\r\n          });\r\n        };\r\n        scope.$toggle = function () {\r\n          scope.$$postDigest(function () {\r\n            $modal.toggle();\r\n          });\r\n        };\r\n        // Publish isShown as a protected var on scope\r\n        $modal.$isShown = scope.$isShown = false;\r\n\r\n        // Fetch, compile then initialize modal\r\n        var compileData;\r\n        var modalElement;\r\n        var modalScope;\r\n        var backdropElement = angular.element('<div class=\"' + options.prefixClass + '-backdrop\"/>');\r\n        backdropElement.css({position: 'fixed', top: '0px', left: '0px', bottom: '0px', right: '0px'});\r\n        promise.then(function (data) {\r\n          compileData = data;\r\n          $modal.init();\r\n        });\r\n\r\n        $modal.init = function () {\r\n\r\n          // Options: show\r\n          if (options.show) {\r\n            scope.$$postDigest(function () {\r\n              $modal.show();\r\n            });\r\n          }\r\n\r\n        };\r\n\r\n        $modal.destroy = function () {\r\n\r\n          // Remove element\r\n          destroyModalElement();\r\n\r\n          // remove backdrop element\r\n          if (backdropElement) {\r\n            backdropElement.remove();\r\n            backdropElement = null;\r\n          }\r\n\r\n          // Destroy scope\r\n          scope.$destroy();\r\n        };\r\n\r\n        $modal.show = function () {\r\n          if ($modal.$isShown) return;\r\n\r\n          var parent;\r\n          var after;\r\n          if (angular.isElement(options.container)) {\r\n            parent = options.container;\r\n            after = options.container[0].lastChild ? angular.element(options.container[0].lastChild) : null;\r\n          } else {\r\n            if (options.container) {\r\n              parent = findElement(options.container);\r\n              after = parent[0] && parent[0].lastChild ? angular.element(parent[0].lastChild) : null;\r\n            } else {\r\n              parent = null;\r\n              after = options.element;\r\n            }\r\n          }\r\n\r\n          // destroy any existing modal elements\r\n          if (modalElement) destroyModalElement();\r\n\r\n          // create a new scope, so we can destroy it and all child scopes\r\n          // when destroying the modal element\r\n          modalScope = $modal.$scope.$new();\r\n          // Fetch a cloned element linked from template (noop callback is required)\r\n          modalElement = $modal.$element = compileData.link(modalScope, function (clonedElement, scope) {});\r\n\r\n          if (options.backdrop) {\r\n            // set z-index\r\n            modalElement.css({'z-index': dialogBaseZindex + (backdropCount * 20)});\r\n            backdropElement.css({'z-index': backdropBaseZindex + (backdropCount * 20)});\r\n\r\n            // increment number of backdrops\r\n            backdropCount++;\r\n          }\r\n\r\n          if (scope.$emit(options.prefixEvent + '.show.before', $modal).defaultPrevented) {\r\n            return;\r\n          }\r\n          if (angular.isDefined(options.onBeforeShow) && angular.isFunction(options.onBeforeShow)) {\r\n            options.onBeforeShow($modal);\r\n          }\r\n\r\n          // Set the initial positioning.\r\n          modalElement.css({display: 'block'}).addClass(options.placement);\r\n\r\n          // Options: customClass\r\n          if (options.customClass) {\r\n            modalElement.addClass(options.customClass);\r\n          }\r\n\r\n          // Options: size\r\n          if (options.size && validSizes[options.size]) {\r\n            angular.element(findElement('.modal-dialog', modalElement[0])).addClass(validSizes[options.size]);\r\n          }\r\n\r\n          // Options: animation\r\n          if (options.animation) {\r\n            if (options.backdrop) {\r\n              backdropElement.addClass(options.backdropAnimation);\r\n            }\r\n            modalElement.addClass(options.animation);\r\n          }\r\n\r\n          if (options.backdrop) {\r\n            $animate.enter(backdropElement, bodyElement, null);\r\n          }\r\n\r\n          // Support v1.2+ $animate\r\n          // https://github.com/angular/angular.js/issues/11713\r\n          if (angular.version.minor <= 2) {\r\n            $animate.enter(modalElement, parent, after, enterAnimateCallback);\r\n          } else {\r\n            $animate.enter(modalElement, parent, after).then(enterAnimateCallback);\r\n          }\r\n\r\n          $modal.$isShown = scope.$isShown = true;\r\n          safeDigest(scope);\r\n          // Focus once the enter-animation has started\r\n          // Weird PhantomJS bug hack\r\n          var el = modalElement[0];\r\n          requestAnimationFrame(function () {\r\n            el.focus();\r\n          });\r\n\r\n          bodyElement.addClass(options.prefixClass + '-open');\r\n          // Add assistive attributes to the body to prevent the screen reader from reading it with the virtual keys\r\n          // Only do this if the backdrop option is set.\r\n          if (options.backdrop) {\r\n            bodyElement.attr('aria-hidden', 'true');\r\n          }\r\n\r\n          if (options.animation) {\r\n            bodyElement.addClass(options.prefixClass + '-with-' + options.animation);\r\n          }\r\n\r\n          // Bind events\r\n          bindBackdropEvents();\r\n          bindKeyboardEvents();\r\n          $modal.focus();\r\n        };\r\n\r\n        function enterAnimateCallback () {\r\n          scope.$emit(options.prefixEvent + '.show', $modal);\r\n          if (angular.isDefined(options.onShow) && angular.isFunction(options.onShow)) {\r\n            options.onShow($modal);\r\n          }\r\n\r\n          modalElement.attr('aria-hidden', 'false');\r\n          modalElement[0].focus();\r\n        }\r\n\r\n        $modal.hide = function () {\r\n          if (!$modal.$isShown) return;\r\n\r\n          if (scope.$emit(options.prefixEvent + '.hide.before', $modal).defaultPrevented) {\r\n            return;\r\n          }\r\n          if (angular.isDefined(options.onBeforeHide) && angular.isFunction(options.onBeforeHide)) {\r\n            options.onBeforeHide($modal);\r\n          }\r\n\r\n          modalElement.attr('aria-hidden', 'true');\r\n\r\n          if ($modal.returnFocus && typeof $modal.returnFocus === 'function') $modal.returnFocus();\r\n\r\n          // Support v1.2+ $animate\r\n          // https://github.com/angular/angular.js/issues/11713\r\n          if (angular.version.minor <= 2) {\r\n            $animate.leave(modalElement, leaveAnimateCallback);\r\n          } else {\r\n            $animate.leave(modalElement).then(leaveAnimateCallback);\r\n          }\r\n\r\n          if (options.backdrop) {\r\n            // decrement number of backdrops\r\n            backdropCount--;\r\n            $animate.leave(backdropElement);\r\n          }\r\n          $modal.$isShown = scope.$isShown = false;\r\n          safeDigest(scope);\r\n\r\n          // Unbind events\r\n          unbindBackdropEvents();\r\n          unbindKeyboardEvents();\r\n        };\r\n\r\n        function leaveAnimateCallback () {\r\n          scope.$emit(options.prefixEvent + '.hide', $modal);\r\n          if (angular.isDefined(options.onHide) && angular.isFunction(options.onHide)) {\r\n            options.onHide($modal);\r\n          }\r\n          if (findElement('.modal').length <= 0) {\r\n            bodyElement.removeClass(options.prefixClass + '-open');\r\n            if (options.backdrop) {\r\n              bodyElement.attr('aria-hidden', 'false');\r\n            }\r\n          }\r\n          if (options.animation) {\r\n            bodyElement.removeClass(options.prefixClass + '-with-' + options.animation);\r\n          }\r\n        }\r\n\r\n        function findFocusableElements () {\r\n          // Add all elements we want to include in our selection\r\n          var focusableElements = 'a:not([disabled]), button:not([disabled]), input[type=text]:not([disabled]), [tabindex]:not([disabled]):not([tabindex=\"-1\"])';\r\n          if (document.activeElement) {\r\n            var focusable = Array.prototype.filter.call(modalElement[0].querySelectorAll(focusableElements),\r\n              function (element) {\r\n                // Check for visibility while always include the current activeElement\r\n                return element.offsetWidth > 0 || element.offsetHeight > 0 || element === document.activeElement;\r\n              });\r\n\r\n            return focusable;\r\n          }\r\n        }\r\n\r\n        function findNextFocusableElement (inReverse) {\r\n          if (document.activeElement) {\r\n            var focusable = findFocusableElements();\r\n            if (focusable === undefined) return;\r\n            if (inReverse) {\r\n              focusable = Array.prototype.reverse.call(focusable);\r\n            }\r\n\r\n            var index = focusable.indexOf(document.activeElement);\r\n            return focusable[index + 1];\r\n          }\r\n        }\r\n\r\n        $modal.toggle = function () {\r\n          if ($modal.$isShown) {\r\n            $modal.hide();\r\n          } else {\r\n            $modal.show();\r\n          }\r\n        };\r\n\r\n        $modal.focus = function () {\r\n          modalElement[0].focus();\r\n        };\r\n\r\n        // Protected methods\r\n\r\n        $modal.$onKeyUp = function (evt) {\r\n\r\n          // Escape was pressed on an open modal. Hide it.\r\n          if (evt.which === 27 && $modal.$isShown) {\r\n            $modal.hide();\r\n            evt.stopPropagation();\r\n          }\r\n        };\r\n\r\n        $modal.$onKeyDown = function (evt) {\r\n          if (options.keyboard) {\r\n            if (evt.keyCode === 9) {\r\n\r\n              var nextFocusable = findNextFocusableElement(evt.shiftKey);\r\n              if (nextFocusable === undefined) {\r\n                if (evt.preventDefault) evt.preventDefault();\r\n                if (evt.stopPropagation) evt.stopPropagation();\r\n\r\n                var focusable = findFocusableElements();\r\n                if (evt.shiftKey) {\r\n                  focusable[focusable.length - 1].focus();\r\n                } else {\r\n                  focusable[0].focus();\r\n                }\r\n              }\r\n            }\r\n          }\r\n        };\r\n\r\n        function bindBackdropEvents () {\r\n          if (options.backdrop) {\r\n            modalElement.on('click', hideOnBackdropClick);\r\n            backdropElement.on('click', hideOnBackdropClick);\r\n            backdropElement.on('wheel', preventEventDefault);\r\n          }\r\n        }\r\n\r\n        function unbindBackdropEvents () {\r\n          if (options.backdrop) {\r\n            modalElement.off('click', hideOnBackdropClick);\r\n            backdropElement.off('click', hideOnBackdropClick);\r\n            backdropElement.off('wheel', preventEventDefault);\r\n          }\r\n        }\r\n\r\n        function bindKeyboardEvents () {\r\n          if (options.keyboard) {\r\n            modalElement.on('keyup', $modal.$onKeyUp);\r\n            modalElement.on('keydown', $modal.$onKeyDown);\r\n          }\r\n        }\r\n\r\n        function unbindKeyboardEvents () {\r\n          if (options.keyboard) {\r\n            modalElement.off('keyup', $modal.$onKeyUp);\r\n            modalElement.off('keydown', $modal.$onKeyDown);\r\n          }\r\n        }\r\n\r\n        // Private helpers\r\n\r\n        function hideOnBackdropClick (evt) {\r\n          if (evt.target !== evt.currentTarget) return;\r\n          if (options.backdrop === 'static') {\r\n            $modal.focus();\r\n          } else {\r\n            $modal.hide();\r\n          }\r\n        }\r\n\r\n        function preventEventDefault (evt) {\r\n          evt.preventDefault();\r\n        }\r\n\r\n        function destroyModalElement () {\r\n          if ($modal.$isShown && modalElement !== null) {\r\n            // un-bind events\r\n            unbindBackdropEvents();\r\n            unbindKeyboardEvents();\r\n          }\r\n\r\n          if (modalScope) {\r\n            modalScope.$destroy();\r\n            modalScope = null;\r\n          }\r\n\r\n          if (modalElement) {\r\n            modalElement.remove();\r\n            modalElement = $modal.$element = null;\r\n          }\r\n        }\r\n\r\n        return $modal;\r\n\r\n      }\r\n\r\n      // Helper functions\r\n\r\n      function safeDigest (scope) {\r\n        /* eslint-disable no-unused-expressions */\r\n        scope.$$phase || (scope.$root && scope.$root.$$phase) || scope.$digest();\r\n        /* eslint-enable no-unused-expressions */\r\n      }\r\n\r\n      function findElement (query, element) {\r\n        return angular.element((element || document).querySelectorAll(query));\r\n      }\r\n\r\n      return ModalFactory;\r\n\r\n    };\r\n\r\n  })\r\n\r\n  .directive('bsModal', function ($window, $sce, $parse, $modal) {\r\n\r\n    return {\r\n      restrict: 'EAC',\r\n      scope: true,\r\n      link: function postLink (scope, element, attr, transclusion) {\r\n\r\n        // Directive options\r\n        var options = {scope: scope, element: element, show: false};\r\n        angular.forEach(['template', 'templateUrl', 'controller', 'controllerAs', 'contentTemplate', 'placement', 'backdrop', 'keyboard', 'html', 'container', 'animation', 'backdropAnimation', 'id', 'prefixEvent', 'prefixClass', 'customClass', 'modalClass', 'size', 'zIndex'], function (key) {\r\n          if (angular.isDefined(attr[key])) options[key] = attr[key];\r\n        });\r\n\r\n        // Options: alias modalClass to customClass\r\n        if (options.modalClass) {\r\n          options.customClass = options.modalClass;\r\n        }\r\n\r\n        // use string regex match boolean attr falsy values, leave truthy values be\r\n        var falseValueRegExp = /^(false|0|)$/i;\r\n        angular.forEach(['backdrop', 'keyboard', 'html', 'container'], function (key) {\r\n          if (angular.isDefined(attr[key]) && falseValueRegExp.test(attr[key])) options[key] = false;\r\n        });\r\n\r\n        // bind functions from the attrs to the show and hide events\r\n        angular.forEach(['onBeforeShow', 'onShow', 'onBeforeHide', 'onHide'], function (key) {\r\n          var bsKey = 'bs' + key.charAt(0).toUpperCase() + key.slice(1);\r\n          if (angular.isDefined(attr[bsKey])) {\r\n            options[key] = scope.$eval(attr[bsKey]);\r\n          }\r\n        });\r\n\r\n        // Support scope as data-attrs\r\n        angular.forEach(['title', 'content'], function (key) {\r\n          if (attr[key]) {\r\n            attr.$observe(key, function (newValue, oldValue) {\r\n              scope[key] = $sce.trustAsHtml(newValue);\r\n            });\r\n          }\r\n        });\r\n\r\n        // Support scope as an object\r\n        if (attr.bsModal) {\r\n          scope.$watch(attr.bsModal, function (newValue, oldValue) {\r\n            if (angular.isObject(newValue)) {\r\n              angular.extend(scope, newValue);\r\n            } else {\r\n              scope.content = newValue;\r\n            }\r\n          }, true);\r\n        }\r\n\r\n        // Initialize modal\r\n        var modal = $modal(options);\r\n\r\n        if (options.keyboard) {\r\n          modal.returnFocus = function () {\r\n            element[0].focus();\r\n          };\r\n        }\r\n\r\n        // Trigger\r\n        element.on(attr.trigger || 'click', modal.toggle);\r\n\r\n        // Garbage collection\r\n        scope.$on('$destroy', function () {\r\n          if (modal) modal.destroy();\r\n          options = null;\r\n          modal = null;\r\n        });\r\n\r\n      }\r\n    };\r\n\r\n  });\r\n"]}